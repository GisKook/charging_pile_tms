// Code generated by protoc-gen-go.
// source: param.proto
// DO NOT EDIT!

package Report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Param_ParaType int32

const (
	Param_Null   Param_ParaType = 0
	Param_UINT8  Param_ParaType = 1
	Param_UINT16 Param_ParaType = 2
	Param_UINT32 Param_ParaType = 3
	Param_UINT64 Param_ParaType = 4
	Param_FLOAT  Param_ParaType = 16
	Param_DOUBLE Param_ParaType = 17
	Param_STRING Param_ParaType = 32
	Param_BYTES  Param_ParaType = 33
)

var Param_ParaType_name = map[int32]string{
	0:  "Null",
	1:  "UINT8",
	2:  "UINT16",
	3:  "UINT32",
	4:  "UINT64",
	16: "FLOAT",
	17: "DOUBLE",
	32: "STRING",
	33: "BYTES",
}
var Param_ParaType_value = map[string]int32{
	"Null":   0,
	"UINT8":  1,
	"UINT16": 2,
	"UINT32": 3,
	"UINT64": 4,
	"FLOAT":  16,
	"DOUBLE": 17,
	"STRING": 32,
	"BYTES":  33,
}

func (x Param_ParaType) String() string {
	return proto.EnumName(Param_ParaType_name, int32(x))
}

type Param struct {
	Type    Param_ParaType `protobuf:"varint,1,opt,name=type,enum=Report.Param_ParaType" json:"type,omitempty"`
	Npara   uint64         `protobuf:"varint,2,opt,name=npara" json:"npara,omitempty"`
	Dpara   float64        `protobuf:"fixed64,3,opt,name=dpara" json:"dpara,omitempty"`
	Strpara string         `protobuf:"bytes,4,opt,name=strpara" json:"strpara,omitempty"`
	Bpara   []byte         `protobuf:"bytes,5,opt,name=bpara,proto3" json:"bpara,omitempty"`
}

func (m *Param) Reset()         { *m = Param{} }
func (m *Param) String() string { return proto.CompactTextString(m) }
func (*Param) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("Report.Param_ParaType", Param_ParaType_name, Param_ParaType_value)
}
